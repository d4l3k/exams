
CPSC 261 Sample Midterm 2
March 2016
Name:

Student ID:

Signature:
– You have 60 minutes to write the 5 questions on this examination.
A total of 45 marks are available.
– Justify all of your answers.
– You are allowed to bring in one hand-written, double-sided 8.5 x
11in sheet of notes, and nothing else.

Question
1
2

– Keep your answers short. If you run out of space for a question,
you have written too much.
– The number in square brackets to the left of the question number
indicates the number of marks allocated for that question. Use
these to help you determine how much time you should spend on
each question.

Marks

3
4
5
Total

– Use the back of the pages for your rough work.
– Good luck!
UNIVERSITY REGULATIONS:
– Each candidate should be prepared to produce, upon request, his/her UBC card.
– No candidate shall be permitted to enter the examination room after the expiration of one half
hour, or to leave during the first half hour of the examination.
– CAUTION: candidates guilty of any of the following, or similar, dishonest practices shall be
immediately dismissed from the examination and shall be liable to disciplinary action.
1. Having at the place of writing, or making use of, any books, papers or memoranda, electronic equipment, or other memory aid or communication devices, other than those authorised by the examiners.
2. Speaking or communicating with other candidates.
3. Purposely exposing written papers to the view of other candidates. The plea of accident or
forgetfulness shall not be received.
– Candidates must not destroy or mutilate any examination material; must hand in all examination
papers; and must not take any examination material from the examination room without permission of the invigilator.

page 2 out of 6
[10] 1. Short answers
[3] (a) Multiplexing and aggregation are two techniques used for virtualization. How do
they differ?

[2] (b) How can the parameters of a cache (block size, set size) be modified without making
the cache bigger to take better advantage of temporal locality in a program? Explain
your answer.

[2] (c) How can the parameters of a cache (block size, set size) be modified without making
the cache bigger to take better advantage of spatial locality in a program? Explain
your answer.

[3] (d) What is a deadlock? Explain one situation where it might occur.

page 3 out of 6
[6] 2. A memory mountain was obtained for an unspecified CPU. In this question, you will be
asked to identify two features of the CPU, given a “slice” of that memory mountain. You
must justify your answers.
[3] a. The following figure shows throughput as a function of the array size, for a fixed
stride.

The largest size shown in the figure is larger than the size of the CPU’s largest cache.
What is the approximate size of that largest cache?

[3] b. The following figures shows throughput as a function of stride for an array that does
not fit in the CPU’s largest cache.

What is the approximate size of each cache line in bytes, knowing that sizeof(int)
== 4?

page 4 out of 6
[10] 3. In this problem, we will consider a cache that is 4-way set associative (E = 4), with 4-byte
block size (B = 4) and 8 sets (S = 8). Suppose that the CPU accesses memory 1 byte at
a time, uses 17-bit addresses (m = 17), and that the cache initially contains the following
data (all values are in hexadecimal, B0 through B3 refer to the four bytes in each block):
Set
0

Valid
1
0
1
1
1
0
1
1
0
1
1
1
0
1
1
1

1
2
3
4
5
6
7

Tag
5B3
CFC
126
431
769
908
7A4
99C
B29
94F
409
AD9
F1C
506
32D
84A

B0
CC
9E
AB
7F
B6
70
F5
01
79
6A
E3
94
1A
A7
F5
58

B1
28
38
D9
D5
41
3E
20
C2
BE
87
49
F0
71
4C
11
84

B2
41
19
85
A1
96
0A
7B
DE
58
68
28
82
40
88
9A
EB

B3
3D
C9
CE
C1
67
A4
B7
8C
3D
09
1A
EF
CD
C1
26
46

Valid
1
1
1
0
0
1
0
1
1
1
0
1
0
1
1
1

Tag
6FA
A45
CC2
1DA
59C
FA9
602
4F0
A4E
FD8
806
650
22D
4BE
C3B
4E4

B0
45
E2
3D
26
50
25
CD
39
65
D8
54
75
EA
9A
3D
2E

B1
CD
BB
84
5F
39
FC
C3
6F
58
D8
13
CA
3F
17
F7
38

B2
64
2D
F1
9B
C8
06
C6
16
3F
9C
8A
28
85
D7
20
80

B3
6D
9F
75
5B
48
34
EF
6D
0E
F9
9E
E3
18
58
9E
33

[2] (a) The following diagram shows the format of an address (one bit per box). Write in
each box which field the bit belongs to: CO (the cache block offset), CI (the cache
set index) and CT (the cache tag).
16

15

14

13

12

11

10

9

8

7

6

5

4

3

2

1

[8] (b) The following table contains, for four read operations:
i.
ii.
iii.
iv.
v.

The binary representation of the address using 17 bits.
Which set will be searched to find the data.
The tag that will be compared against the cache lines’ tags.
Whether it’s a cache hit or a cache miss.
If it’s a cache hit, what value was read from the cache.

Fill in all entries in this table (except for the value read if the access for that row is a
cache miss). A binary to hexadecimal conversion table is included on the last page
of this test.
Address (binary)

Set

Tag

4

C4B

Hit or Miss? Value read

0 1100 0000 0100 1110
0 1000 0110 0010 0111
0 1010 1101 1101 1011
Miss

0

page 5 out of 6
[13] 4. Threads Synchronization
[2] a. Under which conditions does a race condition occur? Be as precise as you can.

[2] b. In class, we discussed three correct implementations of our bounded buffer example:
one that uses locks only, one that uses locks and condition variables, and one that uses
locks and semaphores. What advantage do the second and the third implementations
have over the first one?

[3] c. Consider the first implementation of our bounded buffer example:
while (buf->in - buf->out == N) {
pthread_mutex_unlock(&lock);
usleep(random() % LITTLESTALL);
pthread_mutex_lock(&lock);
}
Why is the lock release before the call to usleep and reacquired afterwards?

[3] d. Consider now the second implementation of our bounded buffer example (this is
taken from our send function):
while (buf->in - buf->out == N) {
pthread_cond_wait(&forspace, &lock);
}
The call to pthread cond wait will terminate (and return to the send function)
under two situations. Which ones?

page 6 out of 6
[3] e. Why did we not write
if (buf->in - buf->out == N) {
pthread_cond_wait(&forspace, &lock);
}
instead?

[6] 5. A CPU has a 2-way set associative (E = 2) cache, with 16-byte block size (B = 16), 8 sets
(S = 8), and a least recently used replacement policy. Assume that sizeof(int) is 4
and that we have the following C declaration:
int a[4][32];
What will be the approximate miss rate for each of the following loops? Justify your answers!
[3] a.

[3] b.

for (i = 0; i < 32; i++)
for (j = 0; j < 4; j++)
sum += a[j][i];

for (j = 0; j < 4; j++)
for (i = 0; i < 32; i++)
sum += a[j][i];

Hex
0
1
2
3
4
5
6
7

Binary
0000
0001
0010
0011
0100
0101
0110
0111

Hex
8
9
A
B
C
D
E
F

Binary
1000
1001
1010
1011
1100
1101
1110
1111

