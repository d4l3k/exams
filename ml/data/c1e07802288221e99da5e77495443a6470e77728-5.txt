
CPSC 314, Midterm Exam
7 March 2016
Closed book, no electronic devices besides simple calculators. Cell phones must be turned off. Place your
photo ID face up on your desk. One single-sided sheet of handwritten notes is allowed, keep it so that you
can reuse it for the final if you want.
Do not open the exam until told to do so. Answer the questions in the space provided. If you run out of
room for an answer, continue on the back. There are 100 points, you have 50 minutes.
Good luck!

Name:

Student Number:

Question Points Earned Points Possible
1
8
2
12
3
20
4
24
5
16
6
20
Total

100

1

1. (8 pts) The point p can be specified as pW = (0, 0) in the coordinate frame W, with orthonormal basis vectors Wi and
Wj. Specify the coordinates of point p in frames A and B.

Aj
Ai

Bj
Bi

Wj
P

Wi

2. (12 pts) True/false
(a) The homogeneous points (2,4,8,2) and (2,4,8,5) map to the same Cartesian point after homogenization.
(b) A rotation transformation leaves the w coordinate of a homogeneous point (x y z w) unchanged.
(c) The transformation from an orthographic view volume to the display coordinate system changes the relative ordering
of objects in depth.
(d) The transformation from a perspective view volume to the display coordinate system may change the relative horizontal and vertical spacing between objects.
(e) The transformation from an orthographic view volume to the display coordinate system depends on the width of the
viewport.
(f) One use case for an asymmetric viewing frustum is stereo viewing.
(g) Doubling the distance of the near plane from the camera in the orthographic view frustum will result in a ”zoomedin” larger object in NDCS (normalized device coordinate system).
(h) Doubling the distances between the left and right plane of the perspective view frustum will result in a horizontal
stretching effect in NDCS.
(i) Normals can be safely transformed by the modelling matrix if it contains only translation.
(j) Modelling transformations are always linear.
(k) Any point outside the orthographic viewing frustum will fall outside the range -1 to 1 in x, y, and z in NDCS.
(l) The projection matrix requires an eye point, lookat point and up vector.

2

3. (20 pts) Draw shapes 2, 3, 4, and 5 transformed by the pseudo code in the left column below. The result of the first call
(shape 1) is shown in the right column.
For reference, the pseudocode transformation is scale(x,y,z), rotate(theta,x,y,z), translate(x,y,z).
Remember that since the specification is in GL code these computations are done with a moving coordinate frame, corresponding to interpreting equations from left to right.
LoadIdentity();
drawShape(); // shape
translate(2,0,0);
drawShape(); // shape
rotate(90, 0, 0, 1);
translate(-1, 0, 0);
drawShape(); // shape
scale(2,2,1);
translate(0, -1, 0);
drawShape(); // shape
rotate(-90, 0, 0, 1);
scale(0.5, 1, 1);
translate(-2, 0, 0);
drawShape(); // shape

y

5
4
3
2
1
x
0 12 3 4 5

1
2

3

4

5

a) shape 2

b) shape 3
y

y

5
4
3
2
1
x
0 1 2 3 4 5

5
4
3
2
1
x
0 1 2 3 4 5

c) shape 4

d) shape 5
y

y

5
4
3
2
1
x
0 1 2 3 4 5

5
4
3
2
1
x
0 1 2 3 4 5

3

4. (24 pts) For each equation below, sketch the new location L’ of the L shape on the grid, whose original position is shown
below. For each equation, on the first row of grids show the incremental computations reading from right to left (moving
object). Then on the next line, show the computations considered left to right (moving coordinate frame). You should get
different intermediate answers, but check your work to ensure that the final position of the L is be the same in both.
y

5
4
3
2
1
x
0 12 3 4 5



1
 0
A=
 0
0

0
1
0
0



0 1

0 −1 
,B = 

1 0 
0 1

0
1
0
0

−1
0
0
0



0 0

0 0 
,C = 

1 0 
0 1

L’ = CBDA L.
First row: right to left, moving object.
L’ = A L
L’ = DA L
y

5
4
3
2
1
x
0 1 2 3 4 5

5
4
3
2
1
x
0 1 2 3 4 5

0
1
0
0

0
0
1
0

L’ = BDA L
y

y

5
4
3
2
1
x
0 1 2 3 4 5

Second row: left to right, moving coordinate frame.
L’ = C L
L’ = CB L
y

1
0
0
0

5
4
3
2
1
x
0 1 2 3 4 5

L’ = CBD L

y

1
0
0
0

0
2
0
0

0
0
1
0


0
0 

0 
1

L’ = CBDA L
y

5
4
3
2
1
x
0 1 2 3 4 5

L’ = CBDA L
y

5
4
3
2
1
x
0 1 2 3 4 5



2

0 
,D = 

0 
1

5
4
3
2
1
x
0 1 2 3 4 5

y

5
4
3
2
1
x
0 1 2 3 4 5

5. (16 pts) A point p is at location (0,0,-2) in VCS (view coordinate system), with near = 1, far = 5, bot = -1, top = 1, right
= 1, left = -1. Find its x and y location in DCS (display coordinate system) with a viewport of width 800 and height 600.
Assume (0,0) is the origin in all coordinates. Show your work/reasons.

4

6. (20 pts) Scene Graphs

• (10 pts) For the mole shown above, complete the scene graph shown on the right. Label the transformation involved,
using MA to designate the matrix that takes point from coordinate frame A to its parent coordinate frame, etc.
Assume that the torso is defined with respect to the world coordinate, and all other body parts are defined with
respect to the torso.
• (5 pts) Give the expression for the composite transformation that should be in the modelview matrix to get from
viewing to the first tentacle coordinates: that is, the transformation to get from the Cam1 coordinate system to the
TL1 coordinate system, or equivalently the matrix that takes a point specified in TL1 coordinates and transforms it
to Cam1 coordinates.

• (5 pts) Your mole wants to have an iClaw to log its fitness goals while swimming and digging. The iClaw has a
camera that lets you see what things would look like from a point of view of the left front claw, C4. (You will feel
dizzy when your mole is digging!) Express Mview2 in terms of the composite transformation in the scene graph
that you complete in the first question. Notice the iClaw frame superimposes on C4 frame. (Mview2 is the W2V
matrix from the point/object point of view.)

5

